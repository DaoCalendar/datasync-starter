---

apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: datasync-starter-server
metadata:
  name: datasync-starter-server
  annotations:
    openshift.io/display-name: DataSync Starter 
    description: |-
        This template allows for the deployment of the Data Sync Example DataSync Starter App.
        The Data Sync Example App contains an example Node.js server implementation that 
        connects to a MongoDB database.
        For more information, see https://github.com/aerogear/datasync-starter/
    tags: sync, mobile, nodejs
    iconClass: icon-nodejs
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/documentation-url: https://access.redhat.com/documentation/en-us/red_hat_managed_integration/1/html-single/developing_a_data_sync_app/index
    openshift.io/support-url: https://access.redhat.com
    template.openshift.io/bindable: 'false'
    aerogear.org/datasync-template-version: '0.9.3'
objects:
- apiVersion: v1
  data:
    model: "${MODEL}"
  kind: ConfigMap
  metadata:
    name: datasync-model
  
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-database_name: "{.data['database-name']}"
      template.openshift.io/expose-password: "{.data['database-password']}"
      template.openshift.io/expose-username: "{.data['database-user']}"
    name: mongodb-credentials
  stringData:
    database-name: "${DATABASE_NAME}"
    database-password: "${DATABASE_PASSWORD}"
    database-user: "${DATABASE_USER}"  

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: datasync-starter-server
    name: datasync-starter-server
  spec:
    replicas: 1
    selector:
      app: datasync-starter-server
      deploymentconfig: datasync-starter-server
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: datasync-starter-server
          deploymentconfig: datasync-starter-server
      spec:
        volumes:
          - name: config
            configMap:
              name: datasync-model
              items:
              - key: "model"
                path: "model.graphql"
        containers:
        - env:
            - name: MONGO_HOST
              value: mongodb
            - name: MONGO_USER
              value: "${DATABASE_USER}"
            - name: MONGO_PASSWORD
              value: "${DATABASE_PASSWORD}"
            - name: MONGO_DATABASE
              value: "${DATABASE_NAME}"  
            - name: MQTT_HOST
              value: mosquitto-mqtt-broker
          image: quay.io/graphql/graphback-runtime:latest
          name: datasync-starter-server
          readinessProbe:
            httpGet:
              path: /.well-known/apollo/server-health
              port: 4000
            initialDelaySeconds: 1
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /.well-known/apollo/server-health
              port: 4000
            initialDelaySeconds: 1
            timeoutSeconds: 1  
          ports:
          - containerPort: 4000
            protocol: TCP
          resources: {}
          volumeMounts:
            - name: config
              mountPath: "/usr/src/model"
              readOnly: true
    triggers:
    - type: ConfigChange
    

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: datasync-starter-server
    name: datasync-starter-server
  spec:
    ports:
    - name: 4000-tcp
      port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      app: datasync-starter-server
      deploymentconfig: datasync-starter-server

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: datasync-starter-server
    annotations:
      template.openshift.io/expose-uri: mongodb://{.spec.clusterIP}:{.spec.ports[?(.name=="mongodb")].port}
    name: mongodb
  spec:
    ports:
    - name: mongodb
      nodePort: 0
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: datasync-starter-server
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    name: mongodb
  spec:
    replicas: 1
    selector:
      name: mongodb
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: mongodb
      spec:
        containers:
        - capabilities: {}
          env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name:  mongodb-credentials
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name:  mongodb-credentials
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name:  mongodb-credentials        
          - name: MONGODB_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name:  mongodb-credentials
          image: centos/mongodb-34-centos7:latest
          imagePullPolicy: IfNotPresent
          name: mongodb
          readinessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 5
            periodSeconds: 20
          ports:
          - containerPort: 27017
            protocol: TCP
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: "/dev/termination-log"
          volumeMounts:
          - mountPath: "/data/db"
            name: "mongodb-data"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: "mongodb-data"
          persistentVolumeClaim:
            claimName: mongodb
  status: {}    

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: datasync-starter-server
    name: mongodb
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${VOLUME_CAPACITY}"      

- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: datasync-starter-server
    name: "${SERVER_SERVICE_NAME}"
  spec:
    host: ""
    to:
      kind: Service
      name: "${SERVER_SERVICE_NAME}"
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Allow

- kind: DeploymentConfig
  apiVersion: v1
  name: mosquitto-mqtt-broker
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: datasync-starter-server
    name: mosquitto-mqtt-broker
  spec:
    replicas: 1
    selector:
      app: datasync-starter-server
      deploymentconfig: mosquitto-mqtt-broker
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: datasync-starter-server
          deploymentconfig: mosquitto-mqtt-broker
      spec:
        containers:
          - name: mosquitto-mqtt-broker
            image: eclipse-mosquitto:latest
            ports:
              - containerPort: 1883
                protocol: TCP
    strategy:
      resources: {}
      type: Rolling
    paused: false 
    revisionHistoryLimit: 2 
    minReadySeconds: 0

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: datasync-starter-server
    name: mosquitto-mqtt-broker
  spec:
    ports:
    - name: 1883-tcp
      port: 1883
      protocol: TCP
      targetPort: 1883
    selector:
      app: datasync-starter-server
      deploymentconfig: mosquitto-mqtt-broker
  status:
    loadBalancer: {}

parameters:
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 512Mi
- description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  name: NAMESPACE
  value: openshift
- description: Username for MongoDB user that will be used for accessing the database.
  displayName: Mongo Connection Username
  name: DATABASE_USER
  value: user
- description: Password for the MongoDB connection user.
  displayName: MongoDB Connection Password
  name: DATABASE_PASSWORD
  value: password
- description: Name of the MongoDB database accessed.
  displayName: MongoDB Database Name
  name: DATABASE_NAME
  value: showcase
- description: The name of the OpenShift Service exposed for the Server.
  displayName: Server Service name
  name: SERVER_SERVICE_NAME
  value: datasync-starter-server
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  value: 1Gi
- description: A GraphQL Schema representing the business model
  displayName: Business Model
  name: MODEL
  value: ''
  